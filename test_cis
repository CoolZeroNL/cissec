#!/bin/bash

#https://benchmarks.cisecurity.org/tools2/linux/CIS_CentOS_Linux_7_Benchmark_v1.1.0.pdf


FSTAB='/etc/fstab'
YUM_CONF='/etc/yum.conf'
GRUB_CFG='/boot/grub2/grub.cfg'
GRUB_DIR='/etc/grub.d'
SELINUX_CFG='/etc/selinux/config'
NTP_CONF='/etc/ntp.conf'
SYSCON_NTPD='/etc/sysconfig/ntpd'

function separate_partition {
  # Test that the supplied $1 is a separate partition

  local filesystem="${1}"
  grep -q "[[:space:]]${filesystem}[[:space:]]" "${FSTAB}" || return
}

function mount_option {
  # Test the the supplied mount option $2 is in use on the supplied filesystem $1

  local filesystem="${1}"
  local mnt_option="${2}"

  grep "[[:space:]]${filesystem}[[:space:]]" "${FSTAB}" | grep -q "${mnt_option}" || return

  mount | grep "[[:space:]]${filesystem}[[:space:]]" | grep -q "${mnt_option}" || return
}

function bind_mounted_to {
  # Test that a directory /foo/dir is bind mounted onto a particular filesystem

  local directory="${1}"
  local filesystem="${2}"
  local E_NO_MOUNT_OUTPUT=1

  grep "^${filesystem}[[:space:]]" "${FSTAB}" | grep -q "${directory}" || return

  local grep_mount
  grep_mount=$(mount | grep "^${filesystem}[[:space:]]" | grep "${directory}")
  #If $directory doesn't appear in the mount output as mounted on the $filesystem  
  #it may appear in the output as being mounted on the same device as $filesystem, check for this
  local fs_dev
  local dir_dev
  fs_dev="$(mount | grep "[[:space:]]${filesystem}[[:space:]]" | cut -d" " -f1)"
  dir_dev="$(mount | grep "[[:space:]]${directory}[[:space:]]" | cut -d" " -f1)"
  if [[ -z "${grep_mount}" ]] && [[ "${fs_dev}" != "${dir_dev}" ]] ; then
    return "${E_NO_MOUNT_OUTPUT}"
  fi
}

function test_disable_mounting {
  # Test the the supplied filesystem type $1 is disabled

  local module="${1}"
  modprobe -n -v ${module} | grep -q "install \+/bin/true" || return 

  lsmod | grep -qv "${module}" || return
}

function centos_gpg_key_installed {
  # Test CentOS GPG Key is installed
  local centos_off_str='gpg(CentOS-7 Key (CentOS 7 Official Signing Key) <security@centos.org>)'
  rpm -q --queryformat "%{SUMMARY}\n" gpg-pubkey | grep -q "${centos_off_str}" || return
}

function yum_gpgcheck {
  # Check that gpgcheck is Globally Activated
  cut -d \# -f1 ${YUM_CONF} | grep 'gpgcheck' | grep -q 'gpgcheck=1' || return
}

function yum_update {
  # Check for outstanding pkg update with yum
  yum -q check-update || return
}

function pkg_integrity {
  # Verify the installed packages by comparing the installed files against file info stored in the pkg
  local rpm_out
  rpm_out="$(rpm -qVa | awk '$2 != "c" { print $0}')"
  [[ -z "${rpm_out}" ]] || return
}

function rpm_installed {
  # Test whether an rpm is installed

  local rpm="${1}"
  local rpm_out
  rpm -q $rpm | cut -d- -f1 | grep -q "${rpm}" || return
}

function verify_aide_cron {
  # Verify there is a cron job scheduled to run the aide check
  crontab -u root -l | cut -d\# -f1 | grep -q "aide \+--check" || return
}

function verify_selinux_grubcfg {
  # Verify SELinux is not disabled in grub.cfg file 

  local grep_out1
  grep_out1="$(grep selinux=0 ${GRUB_CFG})"
  [[ -z "${grep_out1}" ]] || return

  local grep_out2
  grep_out2="$(grep enforcing=0 ${GRUB_CFG})"
  [[ -z "${grep_out2}" ]] || return
}

function verify_selinux_state {
  # Verify SELinux configured state in /etc/selinux/config

  cut -d \# -f1 ${SELINUX_CFG} | grep 'SELINUX=' | tr -d '[[:space:]]' | grep -q 'SELINUX=enforcing' || return
}

function verify_selinux_policy {
  # Verify SELinux policy in /etc/selinux/config

  cut -d \# -f1 ${SELINUX_CFG} | grep 'SELINUXTYPE=' | tr -d '[[:space:]]' | grep -q 'SELINUXTYPE=targeted' || return
}

function rpm_not_installed {
  # Check that the supplied rpm $1 is not installed

  local rpm="${1}"
  rpm -q $rpm | grep -q "package ${rpm} is not installed" || return
}

function unconfined_procs {
  # Test for unconfined daemons
  
  local ps_out
  ps_out="$(ps -eZ | egrep 'initrc|unconfined' | egrep -v 'bash|ps|grep')"
  [[ -n "${ps_out}" ]] || return
}

function check_grub_owns {
  # Check User/Group Owner on grub.cfg file
  stat -L -c "%u %g" ${GRUB_CFG} | grep -q '0 0' || return
}

function check_grub_perms {
  # Check Perms on grub.cfg file
  stat -L -c "%a" ${GRUB_CFG} | grep -q '.00' || return
}

function check_boot_pass {
  grep -q 'set superusers=' "${GRUB_CFG}"
  if [[ "$?" -ne 0 ]]; then
    grep -q 'set superusers=' ${GRUB_DIR}/* || return
    file="$(grep 'set superusers' ${GRUB_DIR}/* | cut -d: -f1)"
    grep -q 'password' "${file}" || return
  else
    grep -q 'password' "${GRUB_CFG}" || return
  fi
}

function check_svc_not_enabled {
  # Verify that the service $1 is not enabled
  local service="$1" 
  systemctl list-unit-files | grep -qv "${service}" && return 
  systemctl is-enabled "${service}" | grep -q 'enabled' || return
}

function ntp_cfg {
  cut -d\# -f1 ${NTP_CONF} | egrep "restrict{1}[[:space:]]+default{1}" ${NTP_CONF} | grep kod \
| grep nomodify | grep notrap | grep nopeer | grep -q noquery || return

  cut -d\# -f1 ${NTP_CONF} | egrep "restrict{1}[[:space:]]+\-6{1}[[:space:]]+default" | grep kod \
| grep nomodify | grep notrap | grep nopeer | grep -q noquery || return

  cut -d\# -f1 ${NTP_CONF} | egrep -q "^[[:space:]]*server" || return

  cut -d\# -f1 ${SYSCON_NTPD} | grep "OPTIONS=" | grep -q "ntp:ntp" || return
}


function func_runner {
  func_name=$1
  shift
  args=$@
  ${func_name} ${args}
  if [[ $? -eq 0 ]]; then
    echo ${func_name} ${args} OK
  else
    echo ${func_name} ${args} ERROR
  fi
}


function main {

  return_code=0

  # CIS 1.1.1 Test that there is a separate /tmp partition
  func_runner separate_partition /tmp
  
  # CIS 1.1.2 Test that the nodev option is on the /tmp partition
  func_runner mount_option /tmp nodev

  # CIS 1.1.3 Test that the nosuid option is on the /tmp partition
  func_runner mount_option /tmp nosuid

  # CIS 1.1.4 Test that the noexec option is on the /tmp partition
  func_runner mount_option /tmp noexec

  # CIS 1.1.5 Test that there is a separate /var partition
  func_runner separate_partition /var

  # CIS 1.1.6 Test that the /var/tmp directory is bind mounted onto the /tmp filesystem
  func_runner bind_mounted_to /var/tmp /tmp

  # CIS 1.1.7 Test that there is a separate /var/log partition
  func_runner separate_partition /var/log

  # CIS 1.1.8 Test that there is a separate /var/log/audit partition
  func_runner separate_partition /var/log/audit

  # CIS 1.1.9 Test that there is a separate /home partition
  func_runner separate_partition /home

  # CIS 1.1.10 Test that the nodev option is on the /home partition
  func_runner mount_option /home nodev

  # TO DO CIS 1.1.11 nodev option on removable media partitions
  # TO DO CIS 1.1.12 noexec option on removable media partitions
  # TO DO CIS 1.1.13 nosuid option on removable media partitions

  # CIS 1.1.14 Test that the nodev option is on the /dev/shm partition
  func_runner mount_option /dev/shm nodev

  # CIS 1.1.15 Test that the nosuid option is on the /dev/shm partition
  func_runner mount_option /dev/shm nosuid

  # CIS 1.1.16 Test that the noexec option is on the /dev/shm partition
  func_runner mount_option /dev/shm noexec

  # TO DO CIS 1.1.17 

  # CIS 1.1.18 Test that the mounting of cramfs filesystems is disabled  
  func_runner test_disable_mounting cramfs

  # CIS 1.1.19 Test that the mounting of freevxfs filesystems is disabled  
  func_runner test_disable_mounting freevxfs

  # CIS 1.1.20 Test that the mounting of jffs2 filesystems is disabled  
  func_runner test_disable_mounting jffs2

  # CIS 1.1.21 Test that the mounting of hfs filesystems is disabled  
  func_runner test_disable_mounting hfs

  # CIS 1.1.22 Test that the mounting of hfsplus filesystems is disabled  
  func_runner test_disable_mounting hfsplus

  # CIS 1.1.23 Test that the mounting of squashfs filesystems is disabled  
  func_runner test_disable_mounting squashfs

  # CIS 1.1.24 Test that the mounting of udf filesystems is disabled  
  func_runner test_disable_mounting udf

  # CIS 1.2.1 Check that the CentOS GPG Key is Installed
  func_runner centos_gpg_key_installed

  # CIS 1.2.2 Check that gpgcheck is globally activated
  func_runner yum_gpgcheck

  # CIS 1.2.3 Check software package updates with yum
  func_runner yum_update
  
  # CIS 1.2.4 Verify package integrity using RPM
  func_runner pkg_integrity
  
  # CIS 1.3.1 Check that the AIDE rpm is installed
  func_runner rpm_installed aide
  
  # CIS 1.3.2 Check periodic execution of file integrity (that aide runs from cron)
  func_runner verify_aide_cron

  # CIS 1.4.1 Check that SELinux is not disabled in /boot/grub2/grub.cfg 
  func_runner verify_selinux_grubcfg

  # CIS 1.4.2 Verify SELinux configured state in /etc/selinux/config
  func_runner verify_selinux_state

  # CIS 1.4.3 Verify SELinux policy in /etc/selinux/config
  func_runner verify_selinux_policy

  # CIS 1.4.4 Check setroubleshoot RPM is not installed
  func_runner rpm_not_installed setroubleshoot 

  # CIS 1.4.5 Check setroubleshoot RPM is not installed
  func_runner rpm_not_installed mcstrans 

  # CIS 1.4.6 Check for unconfined daemons
  func_runner unconfined_procs
  
  # CIS 1.5.1 Check ownership on /boot/grub2/grub.cfg
  func_runner check_grub_owns 

  # CIS 1.5.2 Check permissions on /boot/grub2/grub.cfg
  func_runner check_grub_perms

  # CIS 1.5.3 Check permissions on /boot/grub2/grub.cfg
  func_runner check_boot_pass

  # TO DO CIS 1.6.1 
  # TO DO CIS 1.6.2
  # TO DO CIS 1.7

  # CIS 2.1.1 Check telnet-server RPM is not installed
  func_runner rpm_not_installed telnet-server

  # CIS 2.1.2 Check telnet RPM is not installed
  func_runner rpm_not_installed telnet

  # CIS 2.1.3 Check rsh-server RPM is not installed
  func_runner rpm_not_installed rsh-server

  # CIS 2.1.4 Check rsh RPM is not installed
  func_runner rpm_not_installed rsh

  # CIS 2.1.5 Check ypbind RPM is not installed
  func_runner rpm_not_installed ypbind

  # CIS 2.1.6 Check ypserv RPM is not installed
  func_runner rpm_not_installed ypserv

  # CIS 2.1.7 Check tftp RPM is not installed
  func_runner rpm_not_installed tftp

  # CIS 2.1.8 Check tftp-server RPM is not installed
  func_runner rpm_not_installed tftp-server

  # CIS 2.1.9 Check talk RPM is not installed
  func_runner rpm_not_installed talk

  # CIS 2.1.10 Check talk-server RPM is not installed
  func_runner rpm_not_installed talk-server

  # CIS 2.1.11 Check xinetd RPM is not installed
  func_runner rpm_not_installed xinetd

  # CIS 2.1.12 Check chargen-dgram is not enabled
  func_runner check_svc_not_enabled chargen-dgram

  # CIS 2.1.13 Check chargen-stream is not enabled
  func_runner check_svc_not_enabled chargen-stream

  # CIS 2.1.14 Check daytime-dgram is not enabled
  func_runner check_svc_not_enabled daytime-dgram
  
  # CIS 2.1.15 Check daytime-stream is not enabled
  func_runner check_svc_not_enabled daytime-stream

  # CIS 2.1.16 Check echo-dgram is not enabled
  func_runner check_svc_not_enabled echo-dgram

  # CIS 2.1.17 Check echo-dgram is not enabled
  func_runner check_svc_not_enabled echo-stream

  # CIS 2.1.18 Check tcpmux-server is not enabled
  func_runner check_svc_not_enabled tcpmux-server

  # TODO CIS 3.1 
  # TODO CIS 3.2 
  # CIS 3.2 Check telnet-server RPM is not installed
  func_runner rpm_not_installed xorg-x11-server-common

  # CIS 3.3 Check avahi-daemon is not enabled
  func_runner check_svc_not_enabled avahi-daemon

  # CIS 3.4 Check cups is not enabled
  func_runner check_svc_not_enabled cups

  # CIS 3.5 Check dhcp RPM is not installed
  func_runner rpm_not_installed dhcp

  # CIS 3.6 NTP config
  func_runner ntp_cfg

  # CIS 3.7.1 Check LDAP RPMs are not installed
  func_runner rpm_not_installed openldap-servers
  func_runner rpm_not_installed openldap-clients

  # CIS 3.8 Check NFS and RPC are not enabled
  func_runner check_svc_not_enabled nfslock
  func_runner check_svc_not_enabled rpcgssd
  func_runner check_svc_not_enabled rpcbind
  func_runner check_svc_not_enabled rpcidmapd
  func_runner check_svc_not_enabled rpcsvcgssd

  # CIS 3.9 Check bind RPM is not installed
  func_runner rpm_not_installed bind

  # CIS 3.10 Check vsftpd RPM is not installed
  func_runner rpm_not_installed vsftpd

  # CIS 3.11 Check httpd RPM is not installed
  func_runner rpm_not_installed httpd

  # CIS 3.12 Check dovecot RPM is not installed
  func_runner rpm_not_installed dovecot

  # CIS 3.13 Check samba RPM is not installed
  func_runner rpm_not_installed samba

  # CIS 3.14 Check squid RPM is not installed
  func_runner rpm_not_installed squid

  # CIS 3.15 Check net-snmp RPM is not installed
  func_runner rpm_not_installed net-snmp
 
}

main
